;;;
;;; The global section contains configurations that apply to all devices
;;;
[global]

;;
;; Enable this setting to ensure that the expected number of Tesla brand GPUs
;; are detected by the NVML library.
;;
;; This count only includes Tesla brand GPUs that the nvidia-healthmon
;; process has sufficient permission to access.
;;
;; If this setting is not configured, then checks that require it will skip
;;
; devices.tesla.count = 1

;;
;; nvidia-healthmon checks the system for drivers that have been known to
;; cause issues with NVIDIA hardware, drivers, and software. The following
;; list contains the names of drivers which are known to cause problems.
;; If nvidia-healthmon detects any blacklisted drivers it will not
;; execute further tests.
;;
;; You may add/remove drivers on this list at your own risk.
;;
;; If this setting is not configured, then checks that require it will skip
;;
;
drivers.blacklist = nouveau

;;;
;;; The configuration in each device section only applies to devices of that SKU
;;; Below is an explanation of all fields that can be set in the device section
;;;
;
;[Tesla K20m]
;
;; Each device section starts with the name of the device
;; Run nvidia-smi to determine the name of your GPU
;
;; Bandwidth configuration
;
;; nvidia-healthmon can check the PCIe bandwidth between the pinned host
;; memory and GPU memory
;; If the bandwidth from the host to GPU or from the GPU to the host is
;; below this value (in MB/s), nvidia-healthmon will generate a warning
;;
;; If this setting is not configured, then checks that require it will skip
;
;bandwidth.warn = 1500
;
;
;; nvidia-healthmon can check the PCIe bandwidth between the pinned host
;; memory and GPU memory
;; If the bandwidth from the host to GPU or from the GPU to the host is
;; below this value (in MB/s), nvidia-healthmon will generate an error
;;
;; If this setting is not configured, then checks that require it will skip
;
;bandwidth.min = 100
;
;
;; Peer to Peer configuration
;
;; nvidia-healthmon can check whether peer to peer access is supported between
;; GPUs on the same host.  It can then run a bandwidth test between two GPUs.
;; In the case that peer access is supported, if the bandwidth from one GPU to
;; the other GPU is supported is below this value (in MB/s), nvidia-healthmon
;; will generate a warning.  If peer to peer access is not supported, the
;; bandwidth test is still run, but no comparison to the minimum bandwidth is
;; done.
;
;peer.bandwidth.warn = 8000
;
;
;; nvidia-healthmon can check whether peer to peer access is supported between
;; GPUs on the same host.  It can then run a bandwidth test between two GPUs.
;; In the case that peer access is supported, if the bandwidth from one GPU to
;; the other GPU is supported is below this value (in MB/s), nvidia-healthmon
;; will generate an error.  If peer to peer access is not supported, the
;; bandwidth test is still run, but no comparison to the minimum bandwidth is
;; done.
;
;peer.bandwidth.min = 5000
;
;; PCIe link configuration
;
;; nvidia-healthmon can compare the maximum PCIe link generation for the PCIe
;; link closest to the GPU chip against the value specified here.
;;
;; If this setting is not configured, then checks that require it will skip
;; An error will be generated if there is a mismatch
;;
;; For GPU board that contain multiple GPU chips, this value will reflect
;; the PCIe link generation between the GPU chip and an on board PCIe switch.
;; For single GPU boards this value reflects the link width between the GPU
;; chip and the PCIe slot the GPU is connected to.
;; Note that additional PCIe links upstream from the GPU may have a
;; different link generation.  Those links are not considered here.
;;
;
;pci.gen = 1
;
;
;; nvidia-healthmon can compare the maximum PCIe link width for the PCIe
;; link closest to the GPU chip against the value specified here.
;;
;; If this setting is not configured, then checks that require it will skip
;; An error will be generated if there is a mismatch
;;
;; For GPU board that contain multiple GPU chips, this value will reflect
;; the PCIe link width between the GPU chip and an on board PCIe switch.
;; For single GPU boards this value reflects the link width  between the GPU
;; chip and the PCIe slot the GPU is connected to.
;; Note that additional PCIe links upstream from the GPU may have a
;; different link width.  Those links are not considered here
;
;pci.width = 16
;
;; nvidia-healthmon can compare the current temperature to a warning level in
;; degrees Celsius.  A warning will be generated if the current temperature is
;; at or above the warning level
;;
;; Note that the desired temperature may vary based on the cooling system used
;;
;; If this setting is not configured, then checks that require it will skip
;
;temperature.warn = 95
;

;;;
;;; NVIDIA provides default configuration for various settings of various GPUs
;;;
;;; Some fields provide conservative maximum expected values
;;; Some fields are highly system specific, so no default is provided
;;; Please adjust these values as needed based on local system configuration
;;;

[Tesla K10.G1.8GB]
; This value is affected by a number of factors
; Let's assume a PCIe Gen 2 system with 8x lane width
; If your system supports only Gen 1 or <8x lane width, this estimate may be
; too high. If your system supports Gen 3 or >8x lane width, this estimate
; be too low
; The theoretical bandwidth for such a link will be:
; <Gen speed per lane> * <number of lanes>
; PCIe Gen 2 has 500 MB/s per lane
; So the max theoretical bandwidth is 500 * 8 =
; 4000 MB/s
; In reality we can't hit the max, so we need some value lower
; Other processes running on other GPUs, processes running on the CPU, and
; processes communicating over the PCIe bus can affect the measured bandwidth
;
bandwidth.warn = 9500
; Set this based on your local system configuration
;bandwidth.min = 8000

; The bandwidth between peers is also subject to the above
; estimation in the worst case.  The best case will be much faster.
peer.bandwidth.warn = 9500
; Set this based on your local system configuration
peer.bandwidth.min = 8000

; The on link in question here is the one between the GPU and the PCI switch
; on the GPU board.  This is a PCIe Gen 3 link even if the link to the system
; is lower.  Additionally, this is a 16x wide link.
pci.gen = 3
pci.width = 16

; This is an intentionally high default.  Set it lower based on your system
; thermal configuration.
temperature.warn = 90


[Tesla K10.G2.8GB]
; See [Tesla K10.G1.8GB] section for an explanation of defaults
bandwidth.warn = 9500
bandwidth.min = 8000
peer.bandwidth.warn = 9500
peer.bandwidth.min = 8000
pci.gen = 3
pci.width = 16
temperature.warn = 90


[Tesla K20]
bandwidth.warn = 5000
bandwidth.min = 4500
peer.bandwidth.warn = 5000
peer.bandwidth.min = 4500
pci.gen = 2
pci.width = 16
temperature.warn = 90


[Tesla K20X]
bandwidth.warn = 5000
bandwidth.min = 4500
peer.bandwidth.warn = 5000
peer.bandwidth.min = 4500
pci.gen = 2
pci.width = 16
temperature.warn = 90


[Tesla K20Xm]
bandwidth.warn = 5000
bandwidth.min = 4500
peer.bandwidth.warn = 5000
peer.bandwidth.min = 4500
pci.gen = 2
pci.width = 16
temperature.warn = 90


[Tesla K20c]
bandwidth.warn = 5000
bandwidth.min = 4500
peer.bandwidth.warn = 5000
peer.bandwidth.min = 4500
pci.gen = 2
pci.width = 16
temperature.warn = 90


[Tesla K20s]
bandwidth.warn = 5000
bandwidth.min = 4500
peer.bandwidth.warn = 5000
peer.bandwidth.min = 4500
pci.gen = 2
pci.width = 16
temperature.warn = 90


[Tesla K20m]
bandwidth.warn = 5000
bandwidth.min = 4500
peer.bandwidth.warn = 5000
peer.bandwidth.min = 4500
pci.gen = 2
pci.width = 16
temperature.warn = 90


[Tesla K40]
bandwidth.warn = 9500
bandwidth.min = 8000
peer.bandwidth.warn = 9500
peer.bandwidth.min = 8000
pci.gen = 3
pci.width = 16
temperature.warn = 90


[Tesla K40c]
bandwidth.warn = 9500
bandwidth.min = 8000
peer.bandwidth.warn = 9500
peer.bandwidth.min = 8000
pci.gen = 3
pci.width = 16
temperature.warn = 90


[Tesla K40m]
bandwidth.warn = 9500
bandwidth.min = 8000
peer.bandwidth.warn = 9500
peer.bandwidth.min = 8000
pci.gen = 3
pci.width = 16
temperature.warn = 90


[Tesla K80]
bandwidth.warn = 9500
bandwidth.min = 8000
peer.bandwidth.warn = 9500
peer.bandwidth.min = 8000
pci.gen = 3
pci.width = 16
temperature.warn = 90


